.TH "Aligner.cpp" 3 "Sun May 8 2022" "DNATool" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Aligner.cpp \- Genetic sequence aligner, based on Needleman-Wunsch algorithm\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'Aligner\&.h'\fP
.br
\fC#include <iostream>\fP
.br
\fC#include <cstring>\fP
.br
\fC#include <algorithm>\fP
.br
\fC#include <cstdio>\fP
.br

.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBDirection\fP { \fBVERTICAL\fP, \fBDIAGONAL\fP, \fBHORIZONTAL\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBprintMat\fP (\fBDirectionMat\fP *mat)"
.br
.RI "Prints the given \fBDirectionMat\fP\&. "
.ti -1c
.RI "\fBDirectionMat\fP * \fBinitMat\fP (const size_t rows, const size_t cols)"
.br
.RI "Initializes a \fBDirectionMat\fP for storing Needleman-Wunsch directions\&. "
.ti -1c
.RI "int32_t \fBfillMat\fP (\fBDirectionMat\fP *mat, const string &seq1, const string &seq2)"
.br
.RI "Completes a \fBDirectionMat\fP based on two given genetic sequences\&. "
.ti -1c
.RI "void \fBbuildAligment\fP (\fBDirectionMat\fP *mat, const string &seq1, const string &seq2, array< string, 3 > &output)"
.br
.RI "Builds the optimal alignment for two genetic sequences and an already filled \fBDirectionMat\fP\&. "
.ti -1c
.RI "int32_t \fBgetGlobalAlignment\fP (const string &seq1, const string &seq2, array< string, 3 > &alignment)"
.br
.RI "Runs aligner for two acgt-like strings\&. "
.in -1c
.SH "Detailed Description"
.PP 
Genetic sequence aligner, based on Needleman-Wunsch algorithm\&. 


.PP
\fBAuthors\fP
.RS 4
DALZOTTO, Rafael; HEIR, Alejandro - Grupo 7 
.RE
.PP
\fBVersion\fP
.RS 4
0\&.1 
.RE
.PP
\fBDate\fP
.RS 4
2022-05-08
.RE
.PP
\fBCopyright\fP
.RS 4
Copyright (c) 2022 - 22\&.08 EDA - ITBA 
.RE
.PP

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBDirection\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIVERTICAL \fP\fP
.TP
\fB\fIDIAGONAL \fP\fP
.TP
\fB\fIHORIZONTAL \fP\fP
.SH "Function Documentation"
.PP 
.SS "void buildAligment (\fBDirectionMat\fP * mat, const string & seq1, const string & seq2, array< string, 3 > & output)"

.PP
Builds the optimal alignment for two genetic sequences and an already filled \fBDirectionMat\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fImat\fP 
.br
\fIseq1\fP String with one acgt-like genetic sequence\&. 
.br
\fIseq2\fP String with one acgt-like genetic sequence\&. 
.br
\fIoutput\fP 3-string array to store the optimal alignment\&. 
.RE
.PP

.SS "int32_t fillMat (\fBDirectionMat\fP * mat, const string & seq1, const string & seq2)"

.PP
Completes a \fBDirectionMat\fP based on two given genetic sequences\&. 
.PP
\fBParameters\fP
.RS 4
\fImat\fP 
.br
\fIseq1\fP String with one acgt-like genetic sequence\&. 
.br
\fIseq2\fP String with one acgt-like genetic sequence\&. 
.RE
.PP
\fBReturns\fP
.RS 4
int32_t Optimal score 
.RE
.PP

.SS "int32_t getGlobalAlignment (const string & seq1, const string & seq2, array< string, 3 > & alignment)"

.PP
Runs aligner for two acgt-like strings\&. 
.PP
\fBParameters\fP
.RS 4
\fIseq1\fP String with one acgt-like genetic sequence\&. 
.br
\fIseq2\fP String with one acgt-like genetic sequence\&. 
.br
\fIalignment\fP 3-string array to store the optimal alignment\&. 
.RE
.PP
\fBReturns\fP
.RS 4
int32_t Optimal score 
.RE
.PP

.SS "\fBDirectionMat\fP * initMat (const size_t rows, const size_t cols)"

.PP
Initializes a \fBDirectionMat\fP for storing Needleman-Wunsch directions\&. 
.PP
\fBParameters\fP
.RS 4
\fIrows\fP 
.br
\fIcols\fP 
.RE
.PP
\fBReturns\fP
.RS 4
DirectionMat* 
.RE
.PP

.SS "void printMat (\fBDirectionMat\fP * mat)"

.PP
Prints the given \fBDirectionMat\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fImat\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for DNATool from the source code\&.
