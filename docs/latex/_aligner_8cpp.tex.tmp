\hypertarget{_aligner_8cpp}{}\doxysection{/home/aheir/documents/alheir/eda-\/lvl5-\/dnatool/\+Aligner.cpp File Reference}
\label{_aligner_8cpp}\index{/home/aheir/documents/alheir/eda-\/lvl5-\/dnatool/Aligner.cpp@{/home/aheir/documents/alheir/eda-\/lvl5-\/dnatool/Aligner.cpp}}


Genetic sequence aligner, based on Needleman-\/\+Wunsch algorithm.  


{\ttfamily \#include \char`\"{}Aligner.\+h\char`\"{}}\newline
{\ttfamily \#include $<$iostream$>$}\newline
{\ttfamily \#include $<$cstring$>$}\newline
{\ttfamily \#include $<$algorithm$>$}\newline
{\ttfamily \#include $<$cstdio$>$}\newline
Include dependency graph for Aligner.\+cpp\+:
% FIG 0
\doxysubsection*{Enumerations}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{_aligner_8cpp_a224b9163917ac32fc95a60d8c1eec3aa}\label{_aligner_8cpp_a224b9163917ac32fc95a60d8c1eec3aa}} 
enum {\bfseries Direction} \{ {\bfseries VERTICAL}
, {\bfseries DIAGONAL}
, {\bfseries HORIZONTAL}
 \}
\end{DoxyCompactItemize}
\doxysubsection*{Functions}
\begin{DoxyCompactItemize}
\item 
void \mbox{\hyperlink{_aligner_8cpp_acafc383d41992a4280dcd7d5b99afbdf}{print\+Mat}} (\mbox{\hyperlink{class_direction_mat}{Direction\+Mat}} $\ast$mat)
\begin{DoxyCompactList}\small\item\em Prints the given \mbox{\hyperlink{class_direction_mat}{Direction\+Mat}}. \end{DoxyCompactList}\item 
\mbox{\hyperlink{class_direction_mat}{Direction\+Mat}} $\ast$ \mbox{\hyperlink{_aligner_8cpp_a19e3ed9c1865af0f998b30092c2f7bea}{init\+Mat}} (const size\+\_\+t rows, const size\+\_\+t cols)
\begin{DoxyCompactList}\small\item\em Initializes a \mbox{\hyperlink{class_direction_mat}{Direction\+Mat}} for storing Needleman-\/\+Wunsch directions. \end{DoxyCompactList}\item 
int32\+\_\+t \mbox{\hyperlink{_aligner_8cpp_aa87bad4f7cfa277a3489ec8702d4f82b}{fill\+Mat}} (\mbox{\hyperlink{class_direction_mat}{Direction\+Mat}} $\ast$mat, const string \&seq1, const string \&seq2)
\begin{DoxyCompactList}\small\item\em Completes a \mbox{\hyperlink{class_direction_mat}{Direction\+Mat}} based on two given genetic sequences. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{_aligner_8cpp_aee810494aa7cceeaf110878dd72e5ff2}{build\+Aligment}} (\mbox{\hyperlink{class_direction_mat}{Direction\+Mat}} $\ast$mat, const string \&seq1, const string \&seq2, array$<$ string, 3 $>$ \&output)
\begin{DoxyCompactList}\small\item\em Builds the optimal alignment for two genetic sequences and an already filled \mbox{\hyperlink{class_direction_mat}{Direction\+Mat}}. \end{DoxyCompactList}\item 
int32\+\_\+t \mbox{\hyperlink{_aligner_8cpp_a2f00a915d11b03215f33c4bca13de634}{get\+Global\+Alignment}} (const string \&seq1, const string \&seq2, array$<$ string, 3 $>$ \&alignment)
\begin{DoxyCompactList}\small\item\em Runs aligner for two acgt-\/like strings. \end{DoxyCompactList}\end{DoxyCompactItemize}


\doxysubsection{Detailed Description}
Genetic sequence aligner, based on Needleman-\/\+Wunsch algorithm. 

\begin{DoxyAuthor}{Authors}
DALZOTTO, Rafael; HEIR, Alejandro -\/ Grupo 7 
\end{DoxyAuthor}
\begin{DoxyVersion}{Version}
0.\+1 
\end{DoxyVersion}
\begin{DoxyDate}{Date}
2022-\/05-\/08
\end{DoxyDate}
\begin{DoxyCopyright}{Copyright}
Copyright (c) 2022 -\/ 22.\+08 EDA -\/ ITBA 
\end{DoxyCopyright}


\doxysubsection{Function Documentation}
\mbox{\Hypertarget{_aligner_8cpp_aee810494aa7cceeaf110878dd72e5ff2}\label{_aligner_8cpp_aee810494aa7cceeaf110878dd72e5ff2}} 
\index{Aligner.cpp@{Aligner.cpp}!buildAligment@{buildAligment}}
\index{buildAligment@{buildAligment}!Aligner.cpp@{Aligner.cpp}}
\doxysubsubsection{\texorpdfstring{buildAligment()}{buildAligment()}}
{\footnotesize\ttfamily void build\+Aligment (\begin{DoxyParamCaption}\item[{\mbox{\hyperlink{class_direction_mat}{Direction\+Mat}} $\ast$}]{mat,  }\item[{const string \&}]{seq1,  }\item[{const string \&}]{seq2,  }\item[{array$<$ string, 3 $>$ \&}]{output }\end{DoxyParamCaption})}



Builds the optimal alignment for two genetic sequences and an already filled \mbox{\hyperlink{class_direction_mat}{Direction\+Mat}}. 


\begin{DoxyParams}{Parameters}
{\em mat} & \\
\hline
{\em seq1} & String with one acgt-\/like genetic sequence. \\
\hline
{\em seq2} & String with one acgt-\/like genetic sequence. \\
\hline
{\em output} & 3-\/string array to store the optimal alignment. \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{_aligner_8cpp_aa87bad4f7cfa277a3489ec8702d4f82b}\label{_aligner_8cpp_aa87bad4f7cfa277a3489ec8702d4f82b}} 
\index{Aligner.cpp@{Aligner.cpp}!fillMat@{fillMat}}
\index{fillMat@{fillMat}!Aligner.cpp@{Aligner.cpp}}
\doxysubsubsection{\texorpdfstring{fillMat()}{fillMat()}}
{\footnotesize\ttfamily int32\+\_\+t fill\+Mat (\begin{DoxyParamCaption}\item[{\mbox{\hyperlink{class_direction_mat}{Direction\+Mat}} $\ast$}]{mat,  }\item[{const string \&}]{seq1,  }\item[{const string \&}]{seq2 }\end{DoxyParamCaption})}



Completes a \mbox{\hyperlink{class_direction_mat}{Direction\+Mat}} based on two given genetic sequences. 


\begin{DoxyParams}{Parameters}
{\em mat} & \\
\hline
{\em seq1} & String with one acgt-\/like genetic sequence. \\
\hline
{\em seq2} & String with one acgt-\/like genetic sequence. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
int32\+\_\+t Optimal score 
\end{DoxyReturn}
\mbox{\Hypertarget{_aligner_8cpp_a2f00a915d11b03215f33c4bca13de634}\label{_aligner_8cpp_a2f00a915d11b03215f33c4bca13de634}} 
\index{Aligner.cpp@{Aligner.cpp}!getGlobalAlignment@{getGlobalAlignment}}
\index{getGlobalAlignment@{getGlobalAlignment}!Aligner.cpp@{Aligner.cpp}}
\doxysubsubsection{\texorpdfstring{getGlobalAlignment()}{getGlobalAlignment()}}
{\footnotesize\ttfamily int32\+\_\+t get\+Global\+Alignment (\begin{DoxyParamCaption}\item[{const string \&}]{seq1,  }\item[{const string \&}]{seq2,  }\item[{array$<$ string, 3 $>$ \&}]{alignment }\end{DoxyParamCaption})}



Runs aligner for two acgt-\/like strings. 


\begin{DoxyParams}{Parameters}
{\em seq1} & String with one acgt-\/like genetic sequence. \\
\hline
{\em seq2} & String with one acgt-\/like genetic sequence. \\
\hline
{\em alignment} & 3-\/string array to store the optimal alignment. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
int32\+\_\+t Optimal score 
\end{DoxyReturn}
\mbox{\Hypertarget{_aligner_8cpp_a19e3ed9c1865af0f998b30092c2f7bea}\label{_aligner_8cpp_a19e3ed9c1865af0f998b30092c2f7bea}} 
\index{Aligner.cpp@{Aligner.cpp}!initMat@{initMat}}
\index{initMat@{initMat}!Aligner.cpp@{Aligner.cpp}}
\doxysubsubsection{\texorpdfstring{initMat()}{initMat()}}
{\footnotesize\ttfamily \mbox{\hyperlink{class_direction_mat}{Direction\+Mat}} $\ast$ init\+Mat (\begin{DoxyParamCaption}\item[{const size\+\_\+t}]{rows,  }\item[{const size\+\_\+t}]{cols }\end{DoxyParamCaption})}



Initializes a \mbox{\hyperlink{class_direction_mat}{Direction\+Mat}} for storing Needleman-\/\+Wunsch directions. 


\begin{DoxyParams}{Parameters}
{\em rows} & \\
\hline
{\em cols} & \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Direction\+Mat$\ast$ 
\end{DoxyReturn}
\mbox{\Hypertarget{_aligner_8cpp_acafc383d41992a4280dcd7d5b99afbdf}\label{_aligner_8cpp_acafc383d41992a4280dcd7d5b99afbdf}} 
\index{Aligner.cpp@{Aligner.cpp}!printMat@{printMat}}
\index{printMat@{printMat}!Aligner.cpp@{Aligner.cpp}}
\doxysubsubsection{\texorpdfstring{printMat()}{printMat()}}
{\footnotesize\ttfamily void print\+Mat (\begin{DoxyParamCaption}\item[{\mbox{\hyperlink{class_direction_mat}{Direction\+Mat}} $\ast$}]{mat }\end{DoxyParamCaption})}



Prints the given \mbox{\hyperlink{class_direction_mat}{Direction\+Mat}}. 


\begin{DoxyParams}{Parameters}
{\em mat} & \\
\hline
\end{DoxyParams}
